#!/bin/bash
if [ -f "~/.config/git_saver.txt" ]; then
    echo "No se encuentra el archivo de configuracion ~/.config/git_saver.txt"
    exit 1
fi

# expandir el nombre del archivo de configuracion
config_file=$(eval "echo ~/.config/git_saver.txt")

# iniciar el agente ssh
eval `ssh-agent -s`

# listar las keys ssh disponibles
claves=`ls ~/.ssh | grep id | grep -v "pub"`
numero_claves=$(echo "$claves" | wc -w)

# seleccionar una de las keys ssh
if [ $numero_claves -eq 1 ]; then 
    eleccion=$claves
elif [ $numero_claves -gt 1 ]; then 
    eleccion=`echo -e "$claves" | fzf`
else
    echo "No se encontraron claves ssh en el dispositivo... "
fi

# Verificar si la clave ya est치 registrada
if [ -z "$eleccion" ]; then
    if ssh-add -l | grep "$eleccion" > /dev/null; then
        echo "La clave ya est치 registrada con ssh-add"
    else
        # Registrar la clave con ssh-add
        echo ssh-add $(find ~/.ssh -name "*$eleccion" -type f)
    fi
fi

# Loop through each line in the config file
for regex in `cat $config_file`; do
    # Expand the regular expression using eval
    expanded_folders=$(eval "echo $regex")

    # Use find command to get a list of folders matching the expanded regular expression
    folders=$(find $expanded_folders -maxdepth 0 -type d)

    # colores para echo
    COLOR='\033[0;32m'
    DIVISOR='\033[0;34m'
    NOCOLOR='\033[0m'

    # Loop through each folder and perform the desired operation
    for folder in $folders; do
        # for each folder stage changes and automatically push files
        echo -e "\n${DIVISOR}-------------------------"
        if [ -d "$folder" ]; then
            echo -e "Commit and push de ${COLOR}$folder${NOCOLOR}"
            cd $folder
            git add -A
            git commit -m "feat(git_saver): Autogenerated commit ($(date))"
        else 
            # Si la ruta no es v치lida, mostrar un mensaje de error
            echo "La ruta ${COLOR}$folder${NOCOLOR} no es v치lida."
        fi
    done
done

echo -e "\n${DIVISOR}-------------------------"
echo -e "Commiting ${COLOR}yadm files${NOCOLOR}"
yadm add -u
yadm commit -m "feat(git_saver): Autogenerated commit ($(date))"
yadm push
